apply plugin: 'java'
sourceCompatibility=1.8
targetCompatibility=1.8

apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'war'


mainClassName = 'com.projectx.data.config.Application'

buildscript {
    repositories {
        maven { url "http://repo.spring.io/libs-release" }
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.1.RELEASE")
    }
}


sourceSets {
    generated {
        java {
            srcDirs = ['src/main/generated']
        }
    }
}



war {
    baseName = 'gs-accessing-data-jpa'
    version =  '0.1.0'
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "http://repo.spring.io/libs-release" }
    maven { url "https://repository.jboss.org/nexus/content/repositories/releases" }
}

configurations {

    providedRuntime
	querydslapt  	
}

dependencies {
	compile("org.springframework.boot:spring-boot-starter-web")
	providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")
	
 	compile('com.google.code.gson:gson:2.3')     
    compile("org.springframework.plugin:spring-plugin-core:1.1.0.RELEASE")
    compile("com.jayway.jsonpath:json-path:0.9.1")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    
    

	compile("com.github.springtestdbunit:spring-test-dbunit:1.1.0")
	compile('org.dbunit:dbunit:2.5.0')
	
	compile ('org.springframework.boot:spring-boot-starter-aop')
	
	compile('org.glassfish:javax.json:1.0.4')
	
	compile ("com.mysema.querydsl:querydsl-jpa:3.6.0")
	compile ('com.mysema.querydsl:querydsl-apt:3.6.0')
	
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile('org.hsqldb:hsqldb:2.0.0')
    compile("mysql:mysql-connector-java:5.1.6")
    
    compile('javax.validation:validation-api:1.1.0.Final')
    
}

task generateQueryDSL(type: JavaCompile, group: 'build', description: 'Generates the QueryDSL query types') {
    source = sourceSets.main.java
    classpath = configurations.compile + configurations.querydslapt
    options.compilerArgs = [
            "-proc:only",
            "-processor", "com.mysema.query.apt.jpa.JPAAnnotationProcessor"
    ]
    destinationDir = sourceSets.generated.java.srcDirs.iterator().next()
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.11'
}

compileJava {
    dependsOn generateQueryDSL
    source generateQueryDSL.destinationDir
}
 
compileGeneratedJava {
    dependsOn generateQueryDSL
    options.warnings = false
    classpath += sourceSets.main.runtimeClasspath
}
 
clean {
    delete sourceSets.generated.java.srcDirs
}